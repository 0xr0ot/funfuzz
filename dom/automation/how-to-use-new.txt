Just run:
./loopdomfuzz.py objdir

It will:
* Figure out which version of Firefox you are testing and use appropriate ignore lists.
* Create temporary Firefox profiles.
* Keep fuzzing new instances of Firefox until it finds a new bug.
* If it finds a bug, it will place a file in a wtmp*/ directory, and try to reduce it with Lithium.

objdir must be a Firefox object directory built with --enable-tests, and its parent must be a Firefox source directory.

Crashes:
* It's probably best if you compiled Firefox with --enable-breakpad and you have minidump_stackwalk installed, but the breakpad integration isn't fully working yet.
* On Mac, if you don't have breakpad et al set up, you'll want to turn off crash dialogs: defaults write com.apple.CrashReporter DialogType server

To reproduce a bug with the extension in place (usually not needed):
./rundomfuzz.py objdir url



For dedicated fuzzing machines (Mac only):

Add to /etc/sudoers to allow the script to "sudo reboot" without entering a password:
%admin ALL=(ALL)NOPASSWD: /sbin/reboot

Add macbot.command to your startup commands (system preferences -> accounts). This is essentially a shell script that opens a Terminal window first.

And that's it!  The script will download new builds from Tinderbox automatically and store its results in ~/domfuzzjobs/.
